<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
  xmlns:int="http://www.springframework.org/schema/integration" xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
  xmlns:util="http://www.springframework.org/schema/util" xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
  xmlns:int-mqtt="http://www.springframework.org/schema/integration/mqtt" xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd
    http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.0.xsd
    http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp-4.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc-4.0.xsd
    http://www.springframework.org/schema/integration/mqtt http://www.springframework.org/schema/integration/mqtt/spring-integration-mqtt-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
    ">

  <import resource="classpath:com/lxg/push/common.xml" />
  <import resource="classpath:com/lxg/push/publisher/datasource.xml" />

  <context:component-scan base-package="com.lxg.push.publisher.impl" />

  <int-amqp:inbound-channel-adapter id="amqpInboundChannelAdapter" connection-factory="connectionFactory" queue-names="#{prop['push.mq.queue.cache']}"
      channel="messagePushChannel" message-converter="jsonMessageConverter" /> <!-- error-channel="errorChannel" -->

  <int:channel id="messagePushChannel"/>

  <int:splitter input-channel="messagePushChannel" output-channel="splittedMessageChannel"
      ref="messageFormSplitter" method="split"/>

  <int:channel id="splittedMessageChannel">
    <int:interceptors>
      <int:wire-tap channel="loggerChannel" />
    </int:interceptors>
  </int:channel>

  <int:logging-channel-adapter id="loggerChannel" level="DEBUG" logger-name="pushLogger" expression="'To:[' + headers['mqtt_topic'] + '] Payload:[' + payload + ']'" />
  <int:logging-channel-adapter id="loggingLoggerChannel" level="DEBUG" logger-name="pushLoggingLogger" log-full-message="true" />

  <int-mqtt:outbound-channel-adapter
    client-id="#{mqttClientIdGenerator.generate('javaPuber')}"
    url="#{prop['push.mq.conn.mqtt.url']}"
    client-factory="mqttClientFactory"
    default-qos="1"
    channel="splittedMessageChannel" />


  <!-- Logging BEGIN -->
  <int-amqp:inbound-channel-adapter connection-factory="connectionFactory" queue-names="#{prop['push.mq.queue.log']}"
      channel="messageLoggingChannel" />

  <int:channel id="messageLoggingChannel">
    <int:interceptors>
      <int:wire-tap channel="loggingLoggerChannel" />
    </int:interceptors>
  </int:channel>

  <int-jdbc:outbound-channel-adapter data-source="mysqlDataSource" channel="messageLoggingChannel"
      query="insert into tmp_push_log(topic, message) values(:headers[amqp_receivedRoutingKey], :payload)" />
  <!--  Logging END -->

</beans>